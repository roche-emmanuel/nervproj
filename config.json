// Global configuration file for NervProj
{
  // Folder where to search for VisualStudio installations:
  // This is applicable when targetting the flavor "msvc64" which
  // is the default on windows:
  // Note that the first valid path in this list will be used here.
  "msvc_install_paths": [
    "D:\\Softs\\VisualStudio2022CE",
    "D:\\Softs\\VisualStudio\\VS2022",
    "D:\\Softs\\VisualStudio\\VS2017"
  ],

  // list of location where we should search for packages:
  // "package_urls": ["https://gitlab.nervtech.org/shared/packages/-/raw/main/"],
  "package_urls": ["http://files.nervtech.org/nvp_packages/"],

  "prioritize_package_urls": true,

  // Tools that can be used on windows:
  "windows_tools": [
    {
      "name": "python",
      "sub_path": "python.exe",
      "version": "3.10.1",
      "sub_tools": {
        "autopep8": "Scripts/autopep8.exe",
        "pylint": "Scripts/pylint.exe",
        "pytest": "Scripts/pytest.exe",
        "cmake_format": "Scripts/cmake-format.exe"
      }
    },
    {
      "name": "7zip",
      "sub_path": "7za.exe",
      "version": "9.20"
    },
    {
      "name": "ninja",
      "sub_path": "ninja.exe",
      "version": "1.10.2"
    },
    {
      "name": "cmake",
      "sub_path": "bin/cmake.exe",
      "version": "3.22.3",
      "urls": [
        "https://github.com/Kitware/CMake/releases/download/v3.22.3/cmake-3.22.3-windows-x86_64.zip"
      ]
    },
    {
      "name": "git",
      "sub_path": "bin/git.exe",
      "version": "2.35.1",
      "urls": [
        "https://github.com/git-for-windows/git/releases/download/v2.35.1.windows.2/PortableGit-2.35.1.2-64-bit.7z.exe"
      ]
    },
    {
      "name": "par2",
      "sub_path": "par2j64.exe",
      "version": "1.2.8.6"
    }
  ],
  "linux_tools": [
    {
      "name": "python",
      "sub_path": "bin/python3",
      "version": "3.10.2",
      "sub_tools": {
        "autopep8": "bin/autopep8",
        "pylint": "bin/pylint",
        "pytest": "bin/pytest"
      }
    },
    {
      "name": "7zip",
      "sub_path": "7zzs",
      "version": "21.07"
    },
    {
      "name": "ninja",
      "sub_path": "ninja",
      "version": "1.10.2"
    },
    {
      "name": "cmake",
      "sub_path": "bin/cmake",
      "version": "3.22.3",
      "urls": [
        "https://github.com/Kitware/CMake/releases/download/v3.22.3/cmake-3.22.3-linux-x86_64.tar.gz"
      ]
    },
    {
      "name": "git",
      "path": "git"
    },
    {
      "name": "par2",
      "path": "par2"
    },
    {
      "name": "clang",
      "sub_path": "bin/clang++",
      "version": "13.0.1",
      "urls": [
        "/mnt/array1/dev/compilers/clang+llvm-13.0.1-x86_64-linux-gnu-ubuntu-18.04.tar.xz",
        "https://github.com/llvm/llvm-project/releases/download/llvmorg-13.0.1/clang+llvm-13.0.1-x86_64-linux-gnu-ubuntu-18.04.tar.xz"
      ]
    }
  ],

  // List of libraries that we can build:
  "libraries": [
    {
      "name": "zlib",
      "version": "1.2.12",
      "windows_url": "https://www.zlib.net/zlib1212.zip",
      "linux_url": "https://www.zlib.net/zlib-1.2.12.tar.gz"
    },
    {
      "name": "libiconv",
      "version": "1.16",
      "url": "https://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.16.tar.gz"
    },
    {
      "name": "libxml2",
      "version": "2.9.13",
      "windows_url": "https://gitlab.gnome.org/GNOME/libxml2/-/archive/v2.9.13/libxml2-v2.9.13.zip",
      "linux_url": "https://gitlab.gnome.org/GNOME/libxml2/-/archive/v2.9.13/libxml2-v2.9.13.tar.gz"
    },
    {
      "name": "LLVM",
      "version": "14.0.0",
      "windows_url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-14.0.0.zip",
      "linux_url": "https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-14.0.0.tar.gz",
      "extracted_dir": "llvm-project-llvmorg-14.0.0"
    },
    {
      "name": "boost",
      "version": "1.78.0",
      "url": "https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.7z"
    },
    {
      "name": "SDL2",
      "version": "2.0.20",
      "url": "https://www.libsdl.org/release/SDL2-2.0.20.zip"
    },
    {
      "name": "LuaJIT",
      "version": "2.1",
      "url": "git@github.com:roche-emmanuel/LuaJIT.git"
    },
    {
      "name": "FastNoise2",
      "version": "0.9.4",
      "url": "git@github.com:roche-emmanuel/FastNoise2.git"
    }
  ],

  // list of available projects:
  "projects": [],

  // Default project search paths:
  "project_paths": ["D:\\Projects", "/mnt/array1/dev/projects"],

  // Paths where to search for the user config file:
  "user_config_urls": [
    "D:\\Seafile\\Perso\\Admin\\nervproj.config.json",
    "D:\\Documents\\Perso\\Admin\\nervproj.config.json",
    "/home/kenshin/seafile/Perso/Admin/nervproj.config.json"
  ],

  // Repository url for the NervProj project itself:
  "repository_url": "git@github.com:roche-emmanuel/nervproj.git",

  // Git configuration elements:
  "git": {
    "user_email": "your_email@domain.com",
    "user_name": "your_user_name"
  },

  // List of local blueprints that we can build:
  "cmake_modules": {
    // Fastnoise2 python bindings:
    "pyfn2": {
      "url": "${NVP_ROOT_DIR}/sources/pyfn2",
      "dependencies": {
        "BOOST_DIR": "boost",
        "PYTHON_DIR": "python",
        "FASTNOISE2_DIR": "FastNoise2",
        "PY_VERS_MAJOR": "python:version_major",
        "PY_VERS_MINOR": "python:version_minor"
      }
    }
  },

  // list of scripts commands:
  "scripts": {
    "test-pyfn2": {
      "help": "Test the bindings generated for the fastnoise2 library",
      "cmd": "${PYTHON} -m pytest -s",
      "cwd": "${NVP_ROOT_DIR}/tests/pyfn2",
      "python_path": ["${NVP_ROOT_DIR}"]
    },
    "rchat": {
      "help": "Send a message on the configured rocketchat server",
      "custom_python_env": "social_env",
      "cmd": "${PYTHON} ${NVP_ROOT_DIR}/nvp/communication/rocketchat.py send",
      "python_path": ["${NVP_ROOT_DIR}"]
    },
    "admin": {
      "help": "Admin commands",
      "custom_python_env": "min_env",
      "cmd": "${PYTHON} ${NVP_ROOT_DIR}/nvp/core/admin.py",
      "python_path": ["${NVP_ROOT_DIR}"]
    },
    "cmake": {
      "help": "Cmake commands",
      "custom_python_env": "min_env",
      "cmd": "${PYTHON} ${NVP_ROOT_DIR}/nvp/core/cmake_manager.py",
      "python_path": ["${NVP_ROOT_DIR}"]
    },
    "encrypter": {
      "help": "Generate a pair of RSA key",
      "custom_python_env": "min_env",
      "cmd": "${PYTHON} ${NVP_ROOT_DIR}/nvp/core/encrypter.py",
      "python_path": ["${NVP_ROOT_DIR}"]
    },
    "encrypt": {
      "help": "Generate a pair of RSA key",
      "custom_python_env": "min_env",
      "cmd": "${PYTHON} ${NVP_ROOT_DIR}/nvp/core/encrypter.py encrypt",
      "python_path": ["${NVP_ROOT_DIR}"]
    },
    "decrypt": {
      "help": "Generate a pair of RSA key",
      "custom_python_env": "min_env",
      "cmd": "${PYTHON} ${NVP_ROOT_DIR}/nvp/core/encrypter.py decrypt",
      "python_path": ["${NVP_ROOT_DIR}"]
    },
    "email": {
      "help": "Send an email",
      "custom_python_env": "min_env",
      "cmd": "${PYTHON} ${NVP_ROOT_DIR}/nvp/communication/email_handler.py send",
      "python_path": ["${NVP_ROOT_DIR}"]
    },
    "nodejs": {
      "help": "Run nodejs manager",
      "custom_python_env": "min_env",
      "cmd": "${PYTHON} ${NVP_ROOT_DIR}/nvp/core/nodejs_manager.py",
      "python_path": ["${NVP_ROOT_DIR}"]
    },
    "python": {
      "help": "Run a python command",
      "use_local_python": true,
      "cmd": "${PYTHON}",
      "python_path": ["${PROJECT_ROOT_DIR}"]
    },
    "pip": {
      "help": "Run a pip command",
      "use_local_python": true,
      "cmd": "${PYTHON} -m pip",
      "python_path": ["${PROJECT_ROOT_DIR}"]
    },
    "git": {
      "help": "Run a git command",
      "cmd": "${PYTHON} ${NVP_ROOT_DIR}/nvp/core/git_manager.py",
      "python_path": ["${NVP_ROOT_DIR}"]
    },
    "gitlab": {
      "help": "Run a gitlab command",
      "cmd": "${PYTHON} ${NVP_ROOT_DIR}/nvp/core/gitlab_manager.py",
      "python_path": ["${NVP_ROOT_DIR}"]
    }
  },

  "notify_script_errors": true,

  // Available custom python environments:
  "custom_python_envs": {
    "min_env": {
      "packages": ["requests", "jstyleson", "xxhash", "pycryptodome"]
    },
    "social_env": {
      "packages": ["requests", "jstyleson", "xxhash", "requests-oauthlib"]
    }
  },

  // Available dynamic components:
  "components": {
    "tools": "nvp.core.tools",
    "admin": "nvp.core.admin",
    "cmake": "nvp.core.cmake_manager",
    "rchat": "nvp.communication.rocketchat",
    "email": "nvp.communication.email_handler",
    "psutils": "nvp.core.process_utils",
    "git": "nvp.core.git_manager",
    "gitlab": "nvp.core.gitlab_manager",
    "nodejs": "nvp.core.nodejs_manager",
    "encrypter": "nvp.core.encrypter"
  }
}
