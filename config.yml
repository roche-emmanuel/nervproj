# Folder where to search for VisualStudio installations:
# This is applicable when targetting the flavor "msvc64" which
# is the default on windows:
# Note that the first valid path in this list will be used here.
msvc_install_paths:
  - D:\Softs\VisualStudio2022CE
  - D:\Softs\VisualStudio\VS2022
  - D:\Softs\VisualStudio\VS2017

# No ssh keys by default:
ssh: {}

# list of location where we should search for packages:
# "package_urls": ["https://gitlab.nervtech.org/shared/packages/-/raw/main/"],
package_urls:
  - http://files.nervtech.org/nvp_packages/
prioritize_package_urls: true

# Tools that can be used on windows:
windows_tools:
  - name: python
    sub_path: python.exe
    sub_tools:
      autopep8: Scripts/autopep8.exe
      cmake_format: Scripts/cmake-format.exe
      pylint: Scripts/pylint.exe
      pytest: Scripts/pytest.exe
    version: 3.10.1
  - name: 7zip
    sub_path: 7za.exe
    version: "9.20"
  - name: ninja
    sub_path: ninja.exe
    version: 1.10.2
  - name: cmake
    sub_path: bin/cmake.exe
    urls: https://github.com/Kitware/CMake/releases/download/v3.22.3/cmake-3.22.3-windows-x86_64.zip
    version: 3.22.3
  - name: git
    sub_path: bin/git.exe
    urls: https://github.com/git-for-windows/git/releases/download/v2.35.1.windows.2/PortableGit-2.35.1.2-64-bit.7z.exe
    version: 2.35.1
  - name: par2
    sub_path: par2j64.exe
    version: 1.2.8.6
  - name: ffmpeg
    sub_path: bin/ffmpeg.exe
    sub_tools:
      ffprobe: bin/ffprobe.exe
    urls:
      - http://files.nervtech.org/nvp_packages/tools/ffmpeg-2022.08.25-windows.7z
      - https://www.gyan.dev/ffmpeg/builds/ffmpeg-git-full.7z
    version: 2022.08.25
  - name: perl
    sub_path: perl/bin/perl.exe
    urls: http://files.nervtech.org/nvp_packages/tools/perl-5.32.1.1-windows.7z
    version: 5.32.1.1
  - name: gperf
    sub_path: bin/gperf.exe
    urls: http://files.nervtech.org/nvp_packages/tools/gperf-3.0.1-windows.7z
    version: 3.0.1
  - name: bison
    sub_path: bin/bison.exe
    urls: http://files.nervtech.org/nvp_packages/tools/bison-2.4.1-windows.7z
    version: 2.4.1
  - name: flex
    sub_path: bin/flex.exe
    urls: http://files.nervtech.org/nvp_packages/tools/flex-2.5.4a-windows.7z
    version: 2.5.4a
  - name: nasm
    sub_path: nasm.exe
    urls: http://files.nervtech.org/nvp_packages/tools/nasm-2.16-windows.7z
    version: 2.16
  - name: make
    sub_path: bin/make.exe
    urls: http://files.nervtech.org/nvp_packages/tools/make-3.81-windows.7z
    version: 3.81
  - name: openssl
    version: 3.0.8
    sub_path: bin/openssl.exe
  - name: emsdk
    version: git
    sub_path: emsdk.bat
    urls: http://files.nervtech.org/nvp_packages/tools/emsdk-git-windows.7z
  # depot_tools git package below:
  - name: depot_tools
    version: git
    sub_tools:
      gclient: gclient.bat
      fetch: fetch.bat
    sub_path: gclient.bat
    # urls: http://files.nervtech.org/nvp_packages/tools/depot_tools-git-20230508-windows.7z
    git: https://chromium.googlesource.com/chromium/tools/depot_tools.git

# Tools that can be used on linux:
linux_tools:
  - name: python
    sub_path: bin/python3
    sub_tools:
      autopep8: bin/autopep8
      cmake_format: bin/cmake-format
      pylint: bin/pylint
      pytest: bin/pytest
    version: 3.10.2
  - name: 7zip
    sub_path: 7zzs
    version: "21.07"
  - name: ninja
    sub_path: ninja
    version: 1.10.2
  - name: cmake
    sub_path: bin/cmake
    urls: https://github.com/Kitware/CMake/releases/download/v3.22.3/cmake-3.22.3-linux-x86_64.tar.gz
    version: 3.22.3
  - name: git
    path: git
  - name: par2
    path: par2
  - name: clang
    sub_path: bin/clang++
    urls:
      - /mnt/array1/dev/compilers/clang+llvm-13.0.1-x86_64-linux-gnu-ubuntu-18.04.tar.xz
      - http://files.nervtech.org/nvp_packages/tools/clang+llvm-13.0.1-x86_64-linux-gnu-ubuntu-18.04.tar.xz
      - https://github.com/llvm/llvm-project/releases/download/llvmorg-13.0.1/clang+llvm-13.0.1-x86_64-linux-gnu-ubuntu-18.04.tar.xz
    version: 13.0.1
  - name: ffmpeg
    sub_path: ffmpeg
    sub_tools:
      ffprobe: ffprobe
    urls:
      - http://files.nervtech.org/nvp_packages/tools/ffmpeg-2022.08.25-linux.tar.xz
      - https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-amd64-static.tar.xz
    version: 2022.07.22
  - name: gperf
    sub_path: bin/gperf
    version: 3.1
    urls: http://files.nervtech.org/nvp_packages/tools/gperf-3.1-linux-clang.tar.xz
    # For building:
    # url: http://ftp.gnu.org/pub/gnu/gperf/gperf-3.1.tar.gz
    # build_mode: "std"
  - name: bison
    sub_path: bin/bison
    version: 3.8.2
    urls: http://files.nervtech.org/nvp_packages/tools/bison-3.8.2-linux-clang.tar.xz
    # For building:
    # url: http://ftp.gnu.org/gnu/bison/bison-3.8.2.tar.xz
    # build_mode: "std"
  - name: flex
    sub_path: bin/flex
    version: 2.6.4
    urls: http://files.nervtech.org/nvp_packages/tools/flex-2.6.4-linux-clang.tar.xz
    # For building:
    # url: https://github.com/westes/flex/files/981163/flex-2.6.4.tar.gz
    # build_mode: "std"
  - name: openssl
    version: 3.0.8
    sub_path: bin/openssl
  - name: emsdk
    version: git
    sub_path: emsdk
    urls: http://files.nervtech.org/nvp_packages/tools/emsdk-git-linux.tar.xz
  - name: depot_tools
    version: git
    sub_tools:
      gclient: gclient
      fetch: fetch
    sub_path: gclient
    git: https://chromium.googlesource.com/chromium/tools/depot_tools.git

# Tools that can be used on raspberry:
raspberry_tools:
  - name: python
    sub_path: bin/python3
    sub_tools:
      autopep8: bin/autopep8
      cmake_format: bin/cmake-format
      pylint: bin/pylint
      pytest: bin/pytest
    version: 3.10.2
  - name: git
    path: git
  - name: clang
    path: clang
    version: 10.0.0

# Tools that can be used on raspberry64:
raspberry64_tools:
  - name: python
    sub_path: bin/python3
    sub_tools:
      autopep8: bin/autopep8
      cmake_format: bin/cmake-format
      pylint: bin/pylint
      pytest: bin/pytest
    version: 3.10.2
  - name: git
    path: git
  - name: clang
    path: clang
    version: 10.0.0

# List of libraries that we can build:
libraries:
  - linux_url: https://www.zlib.net/zlib-1.2.13.tar.gz
    name: zlib
    version: 1.2.13
    windows_url: https://www.zlib.net/zlib1213.zip
  - name: libiconv
    url: https://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.16.tar.gz
    version: "1.16"
  - linux_url: https://gitlab.gnome.org/GNOME/libxml2/-/archive/v2.9.13/libxml2-v2.9.13.tar.gz
    name: libxml2
    version: 2.9.13
    windows_url: https://gitlab.gnome.org/GNOME/libxml2/-/archive/v2.9.13/libxml2-v2.9.13.zip
  - name: LLVM
    # version: 15.0.6
    # extracted_dir: llvm-project-llvmorg-15.0.6
    # windows_url: https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-15.0.6.zip
    # linux_url: https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-15.0.6.tar.gz
    version: 15.0.4
    extracted_dir: llvm-project-llvmorg-15.0.4
    windows_url: https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-15.0.4.zip
    linux_url: https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-15.0.4.tar.gz
    # version: 14.0.6
    # extracted_dir: llvm-project-llvmorg-14.0.6
    # windows_url: https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-14.0.6.zip
    # linux_url: https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-14.0.6.tar.gz
  - name: boost
    url: https://boostorg.jfrog.io/artifactory/main/release/1.79.0/source/boost_1_79_0.7z
    version: 1.79.0
  - name: SDL2
    # url: https://www.libsdl.org/release/SDL2-2.0.20.zip
    # version: 2.0.20
    url: https://www.libsdl.org/release/SDL2-2.26.5.zip
    version: 2.26.5
  - name: LuaJIT
    url: git@github.com:roche-emmanuel/LuaJIT.git
    version: "2.1"
  - name: FastNoise2
    url: git@github.com:roche-emmanuel/FastNoise2.git
    # version: 0.9.4
    version: 0.10.0
  - name: spdlog
    url: git@github.com:roche-emmanuel/spdlog.git
    version: 1.10.0
  - name: fmt
    url: git@github.com:roche-emmanuel/fmt.git
    version: 9.1.1
  - name: Vulkan
    version: 1.3.224.1
  - name: glslang
    version: 11.11.0
  # - name: nss
  #   version: 3.64
  #   url: https://ftp.mozilla.org/pub/security/nss/releases/NSS_3_64_RTM/src/nss-3.64-with-nspr-4.30.tar.gz
  # - name: nspr
  #   version: 2023.02
  #   url: hg@https://hg.mozilla.org/projects/nspr
  # - name: nss
  #   version: 2023.02
  #   url: hg@https://hg.mozilla.org/projects/nss
  - name: QT6
    version: 6.4.2
    windows_url: https://download.qt.io/official_releases/qt/6.4/6.4.2/single/qt-everywhere-src-6.4.2.zip
    linux_url: http://files.nervtech.org/nvp_packages/sources/qt-everywhere-src-6.4.2.tar.xz
    # linux_url: https://download.qt.io/official_releases/qt/6.4/6.4.2/single/qt-everywhere-src-6.4.2.tar.xz
  - name: openssl
    version: 3.0.8
    url: https://www.openssl.org/source/openssl-3.0.8.tar.gz
  - name: libcurl
    version: 7.88.1
    windows_url: https://curl.se/download/curl-7.88.1.zip
    linux_url: https://curl.se/download/curl-7.88.1.tar.xz
  - name: hdf5
    version: 1.15.0
    url: git@github.com:roche-emmanuel/hdf5.git
  - name: hdf4
    version: 4.2.16
    url: https://support.hdfgroup.org/ftp/HDF/releases/HDF4.2.16/src/hdf-4.2.16.zip
  - name: proj4
    version: 8.2.1
    url: https://github.com/OSGeo/PROJ/releases/download/8.2.1/proj-8.2.1.zip
  - name: libjpeg
    version: 2.1.91
    git: https://github.com/libjpeg-turbo/libjpeg-turbo.git
  - name: openjpeg
    version: 2.5.0
    url: git@github.com:roche-emmanuel/openjpeg.git
  - name: libpng
    version: 1.6.39
    windows_url: https://download.sourceforge.net/libpng/lpng1639.zip
    linux_url: https://download.sourceforge.net/libpng/libpng-1.6.39.tar.xz
  - name: netcdf
    version: 4.9.2
    windows_url: https://downloads.unidata.ucar.edu/netcdf-c/4.9.2/netcdf-c-4.9.2.zip
    linux_url: https://downloads.unidata.ucar.edu/netcdf-c/4.9.2/netcdf-c-4.9.2.tar.gz
  - name: eccodes
    version: 2.29.0
    url: https://confluence.ecmwf.int/download/attachments/45757960/eccodes-2.29.0-Source.tar.gz
  - name: libuv
    version: 1.44.3
    url: git@github.com:roche-emmanuel/libuv.git
  - name: yamlcpp
    version: 0.7.0
    url: git@github.com:roche-emmanuel/yaml-cpp.git
  - name: glfw
    version: 3.3.8
    url: https://github.com/glfw/glfw/releases/download/3.3.8/glfw-3.3.8.zip
  - name: dawn
    version: git-20230509
    # windows_url: http://files.nervtech.org/nvp_packages/sources/dawn-git-20230509-windows.7z
    # version: git
    git: https://dawn.googlesource.com/dawn
  - name: cglm
    version: git-0.9.0
    git: https://github.com/recp/cglm.git
  - name: ktx
    version: git-4.1.0
    linux_url: http://files.nervtech.org/nvp_packages/sources/ktx-git-4.1.0-linux.tar.xz
    git: https://github.com/KhronosGroup/KTX-Software.git
  - name: sqlite
    version: 3.42.0
    url: https://www.sqlite.org/2023/sqlite-amalgamation-3420000.zip
  - name: tiff
    version: 4.5.0
    url: http://download.osgeo.org/libtiff/tiff-4.5.0.zip
  - name: basisu
    version: 1.16
    url: git@github.com:roche-emmanuel/basis_universal.git
  - name: bzip2
    version: git-1.0
    git: git://sourceware.org/git/bzip2.git
  - name: harfbuzz
    version: git-7.3
    git: https://github.com/harfbuzz/harfbuzz.git
  - name: brotli
    version: git-1.0.9
    git: git@github.com:roche-emmanuel/brotli.git
  - name: freetype
    version: git-2.13
    git: https://gitlab.freedesktop.org/freetype/freetype.git
  - name: utf8cpp
    version: git-3.2.3
    git: git@github.com:roche-emmanuel/utfcpp.git
  - name: gpt4all_chat
    version: git-1.0
    git: git@github.com:roche-emmanuel/gpt4all.git

# list of available projects:
projects: []

# Default project search paths:
project_paths:
  - D:\Projects
  - /mnt/array1/dev/projects

# Paths where to search for the user config file:
user_config_urls:
  - ${HOME}/.nvp/config.yml
  - D:\Seafile\Perso\Admin\nervproj.config.json
  - D:\Documents\Perso\Admin\nervproj.config.json
  - /home/kenshin/seafile/Perso/Admin/nervproj.config.json
  - /home/kenshin/Seafile/Perso/Admin/nervproj.config.json

# Repository url for the NervProj project itself:
repository_url: git@github.com:roche-emmanuel/nervproj.git

# Git configuration elements:
git:
  user_email: your_email@domain.com
  user_name: your_user_name

# List of cmake projects:
cmake_projects:
  # Fastnoise2 python bindings:
  - dependencies:
      BOOST_DIR: boost
      FASTNOISE2_DIR: FastNoise2
      PYTHON_DIR: python
      PY_VERS_MAJOR: python:version_major
      PY_VERS_MINOR: python:version_minor
    install_dir: ${NVP_ROOT_DIR}/dist/bin
    name: pyfn2
    root_dir: ${NVP_ROOT_DIR}/sources/pyfn2

# list of scripts commands:
scripts:
  pyenv:
    notify: false
    custom_python_env: default_env
    cmd: ${PYTHON} ${PROJECT_ROOT_DIR}/nvp/core/py_env.py
    python_path:
      - "${PROJECT_ROOT_DIR}"

  emsdk:
    notify: false
    custom_python_env: default_env
    cmd: ${PYTHON} ${PROJECT_ROOT_DIR}/nvp/core/emsdk_manager.py
    python_path:
      - "${PROJECT_ROOT_DIR}"

  openssl:
    notify: false
    cmd: $[TOOL_PATH:openssl]
    linux_env_vars:
      LD_LIBRARY_PATH: $[TOOL_DIR:openssl]/lib64

  admin:
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/core/admin.py
    custom_python_env: min_env
    help: Admin commands
    python_path:
      - ${NVP_ROOT_DIR}

  gen-cert:
    notify: false
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/core/admin.py gen-cert
    custom_python_env: min_env
    help: Admin commands
    python_path:
      - ${NVP_ROOT_DIR}

  build:
    notify: false
    log_file: ${NVP_ROOT_DIR}/last_build.log
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/core/build_manager.py
    custom_python_env: min_env
    help: Builder commands
    python_path:
      - ${NVP_ROOT_DIR}
  cmake:
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/core/cmake_manager.py
    custom_python_env: min_env
    help: Cmake commands
    output_encoding: latin1
    python_path:
      - ${NVP_ROOT_DIR}
  decrypt:
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/core/encrypter.py decrypt
    custom_python_env: min_env
    help: Generate a pair of RSA key
    python_path:
      - ${NVP_ROOT_DIR}
  email:
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/communication/email_handler.py send
    custom_python_env: min_env
    help: Send an email
    python_path:
      - ${NVP_ROOT_DIR}
  encrypt:
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/core/encrypter.py encrypt
    custom_python_env: min_env
    help: Generate a pair of RSA key
    python_path:
      - ${NVP_ROOT_DIR}
  encrypter:
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/core/encrypter.py
    custom_python_env: min_env
    help: Generate a pair of RSA key
    python_path:
      - ${NVP_ROOT_DIR}
  git:
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/core/git_manager.py
    help: Run a git command
    python_path:
      - ${NVP_ROOT_DIR}
  gitlab:
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/core/gitlab_manager.py
    help: Run a gitlab command
    python_path:
      - ${NVP_ROOT_DIR}
  ninja:
    cmd: ${NINJA}
    help: Run a ninja command
  nodejs:
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/core/nodejs_manager.py
    custom_python_env: min_env
    help: Run nodejs manager
    python_path:
      - ${NVP_ROOT_DIR}
  pip:
    cmd: ${PYTHON} -m pip
    help: Run a pip command
    python_path:
      - ${PROJECT_ROOT_DIR}
    use_local_python: true
  python:
    cmd: ${PYTHON}
    help: Run a python command
    python_path:
      - ${PROJECT_ROOT_DIR}
    use_local_python: true
  rchat:
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/communication/rocketchat.py send
    custom_python_env: social_env
    help: Send a message on the configured rocketchat server
    python_path:
      - ${NVP_ROOT_DIR}
  test-pyfn2:
    cmd: ${PYTHON} -m pytest -s
    cwd: ${NVP_ROOT_DIR}/tests/pyfn2
    help: Test the bindings generated for the fastnoise2 library
    python_path:
      - ${NVP_ROOT_DIR}
  tidy:
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/libraries/windows_msvc/LLVM-14.0.6/bin/clang-tidy.exe
    help: Run clang-tidy command
  tools:
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/core/tools.py
    custom_python_env: min_env
    help: Run the tools manager
    python_path:
      - ${NVP_ROOT_DIR}

  compose-video:
    notify: false
    custom_python_env: media_env
    cmd: ${PYTHON} ${PROJECT_ROOT_DIR}/nvp/media/movie_handler.py compose
    python_path: ["${PROJECT_ROOT_DIR}", "${NVP_ROOT_DIR}"]

  concat-media:
    notify: false
    help: Concatenate multiple media files together.
    custom_python_env: media_env
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/media/movie_handler.py concat-media
    python_path: ["${NVP_ROOT_DIR}"]

  cut-media:
    notify: false
    help: Concatenate multiple media files together.
    custom_python_env: media_env
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/media/movie_handler.py cut-media
    python_path: ["${NVP_ROOT_DIR}"]

  split-media:
    notify: false
    help: Concatenate multiple media files together.
    custom_python_env: media_env
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/media/movie_handler.py split-media
    python_path: ["${NVP_ROOT_DIR}"]

  extract-audio:
    notify: false
    help: Extract audio from a given video file.
    custom_python_env: media_env
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/media/movie_handler.py extract-audio
    python_path: ["${NVP_ROOT_DIR}"]

  norm-sound:
    notify: false
    help: Normalize the sound stream in a video video file
    custom_python_env: media_env
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/media/movie_handler.py norm-sound
    python_path: ["${NVP_ROOT_DIR}"]

  build-cv:
    notify: false
    help: Build CV from given input file
    custom_python_env: cv_env
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/admin/cv_builder.py build
    python_path: ["${NVP_ROOT_DIR}"]

  # Custom command to build my own CV:
  build-my-cv:
    notify: false
    help: Build CV from given input file
    custom_python_env: cv_env
    cwd: D:/Projects/NervHome/data/cv
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/admin/cv_builder.py build -i manu.yml
    python_path: ["${NVP_ROOT_DIR}"]

  audio2text:
    notify: false
    help: Translate audio file to text
    custom_python_env: whisper_env
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/ai/whisper_gen.py convert
    python_path: ["${NVP_ROOT_DIR}"]

  gpt4all:
    notify: false
    help: Run GPT4All chat
    cmd: ${NVP_ROOT_DIR}/libraries/windows_msvc/gpt4all_chat-git-1.0/bin/chat.exe
    env_paths: ${NVP_ROOT_DIR}/libraries/windows_msvc/gpt4all_chat-git-1.0/lib;${NVP_ROOT_DIR}/libraries/windows_msvc/QT6-6.4.2/bin;${NVP_ROOT_DIR}/libraries/windows_msvc/openssl-3.0.8/bin
    # env_paths: ${NVP_ROOT_DIR}/libraries/windows_msvc/gpt4all_chat-git-1.0/lib

  update_sd_webui:
    # Update the SD webui on window
    notify: false
    custom_python_env: sd_webui_env
    cwd: D:\Projects\sd_webui
    cmd: cmd /c start update.bat
    python_path: ["${NVP_ROOT_DIR}"]

  sd_webui:
    # Run the SD webui on window
    notify: false
    custom_python_env: sd_webui_env
    cwd: D:\Projects\sd_webui
    cmd: cmd /c start run.bat
    python_path: ["${NVP_ROOT_DIR}"]

  txt2img:
    notify: false
    custom_python_env: sd_env
    cmd: ${PYTHON} ${NVP_ROOT_DIR}/nvp/ai/stable_diffusion/stable_diffusion.py txt2img --turbo
    python_path: ["${NVP_ROOT_DIR}"]

  txt2img-ref:
    notify: false
    custom_python_env: sd_env
    # --plms
    # cmd: ${PYTHON} scripts/txt2img.py --ckpt sd-v1-4.ckpt --skip_grid --n_samples 1 --ddim_steps 70
    # --prompt "Cyberpunk style image of a Telsa car reflection in rain"
    # --seed 27 --n_iter 1 --n_samples 1
    cmd: ${PYTHON} optimizedSD/optimized_txt2img.py --H 512 --W 768 --ddim_steps 70
    python_path: [".", "taming-transformers", "CLIP"]

  sdlab:
    notify: false
    custom_python_env: sdlab_env
    cmd: ${PYTHON} ${PROJECT_ROOT_DIR}/app/sdlab/main.py run
    python_path: ["${NVP_ROOT_DIR}"]

  create-par2:
    notify: false
    custom_python_env: default_env
    cmd: ${PYTHON} ${PROJECT_ROOT_DIR}/nvp/core/admin.py create-par2
    python_path: ["${NVP_ROOT_DIR}"]

  gen-thumb:
    notify: false
    custom_python_env: media_env
    cwd: Z:/perso/youtube
    cmd: ${PYTHON} ${PROJECT_ROOT_DIR}/nvp/media/thumb_generator.py gen-thumb
    python_path: ["${NVP_ROOT_DIR}"]

# Notify in case of script error:
notify_script_errors: true

# Available custom python environments:
custom_python_envs:
  default_env:
    packages:
      - requests
      - jstyleson
      - pyyaml
      - xxhash
  min_env:
    inherit: default_env
    packages:
      - pycryptodome
  social_env:
    inherit: default_env
    packages:
      - requests-oauthlib
  media_env:
    inherit: default_env
    packages:
      - moviepy
      - Pillow
      - ffmpeg-python
      - opencv-python
  sd_env:
    inherit: default_env
    packages:
      - albumentations==0.4.3
      - opencv-python==4.7.0.68
      - imageio==2.9.0
      - imageio-ffmpeg==0.4.2
      - pytorch-lightning==1.4.2
      - omegaconf==2.1.1
      - streamlit==1.17.0
      - einops==0.3.0
      - torch-fidelity==0.3.0
      - transformers==4.19.2
      - torchmetrics==0.6.0
      - kornia==0.6
      - numpy==1.24.1
      - tqdm==4.64.1
      - http://files.nervtech.org/nvp_packages/wheels/clip-1.0-py3-none-any.whl
      - --extra-index-url https://download.pytorch.org/whl/cu113
      - torch==1.12.1
      - torchvision==0.13.1
      - torchaudio==0.12.1
      # - diffusers==0.11.1
      # - pudb==2019.2
      # - invisible-watermark==0.1.5
      # - test-tube==0.7.5
      # - streamlit>=0.73.1
      # - numpy==1.19.2
      # - ftfy==6.1.1
      # - regex
  sd_webui_env:
    inherit: default_env
    packages:
      - wheel

  sdlab_env:
    inherit: default_env
    packages:
      - PyQt5
      - ModernGL
      - Pillow
      - numpy

  whisper_env:
    inherit: default_env
    packages:
      - openai-whisper
      - --extra-index-url https://download.pytorch.org/whl/cu117
      - torch
      - torchvision
      - torchaudio

      # - numba
      # - numpy
      # - torch
      # - tqdm
      # - more-itertools
      # - tiktoken==0.3.3

  cv_env:
    inherit: default_env
    packages:
      - Pillow
      - odfpy
      # - python-docx
      # - docx2pdf
      - fontawesome

# Available dynamic components:
components:
  admin: nvp.core.admin
  builder: nvp.core.build_manager
  cmake: nvp.core.cmake_manager
  email: nvp.communication.email_handler
  encrypter: nvp.core.encrypter
  git: nvp.core.git_manager
  emsdk: nvp.core.emsdk_manager
  gitlab: nvp.core.gitlab_manager
  nodejs: nvp.core.nodejs_manager
  psutils: nvp.core.process_utils
  rchat: nvp.communication.rocketchat
  tools: nvp.core.tools
  pyenvs: nvp.core.py_env
